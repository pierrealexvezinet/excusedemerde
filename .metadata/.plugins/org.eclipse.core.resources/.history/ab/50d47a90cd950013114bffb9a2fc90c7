package fr.edm.fragment;

import java.util.ArrayList;
import java.util.concurrent.ExecutionException;

import org.springframework.http.converter.HttpMessageNotReadableException;

import com.octo.android.robospice.exception.NoNetworkException;
import com.octo.android.robospice.persistence.DurationInMillis;
import com.octo.android.robospice.persistence.exception.CacheLoadingException;
import com.octo.android.robospice.persistence.exception.SpiceException;
import com.octo.android.robospice.request.listener.RequestListener;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.Toast;
import fr.activity.edm.R;
import fr.edm.fragment.parent.EdmFragment;
import fr.edm.webservice.EdmService;
import fr.edm.EdmApplication;
import fr.edm.activity.AccueilActivity;
import fr.edm.activity.parent.EdmFragmentActivity;
import fr.edm.adapter.PostEdmAdapter;
import fr.edm.model.Edm;
import fr.edm.model.EdmUser;
import fr.edm.model.ListEdmsUser;
import fr.edm.model.PostEdm;
import fr.edm.parent.request.EdmSpiceRequest;
import fr.edm.request.edm.UserEdmsRequest;
import fr.edm.utils.ApplicationConstants;
import fr.edm.utils.PreferenceHelper;
import fr.edm.utils.ToolBox;


public class MesEdmsFragment extends EdmFragment {

	EdmService edmService = new EdmService();
	ListView listViewUserEdm;
	UserEdmsRequest userEdmsRequest = null;
	public static Edm edm = new Edm();
	PostEdmAdapter adapter;
	int cpt = 0;
	Intent intent = null;
	
	UserEdmsRequest userEdmRequest;
    ArrayList<EdmUser> listUserEdmS_RS = new ArrayList<EdmUser>();
	ArrayList<EdmUser> listUserEdmS = new ArrayList<EdmUser>();
	
	

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		View v = inflater.inflate(R.layout.mes_edms_fragment, container, false);
		listViewUserEdm = (ListView) v.findViewById(R.id.mes_edm_listview);

		/************************* GET USER EDM *******************************/

		 String pseudoEdmPreferences = "";
		
		if(!((EdmFragmentActivity) getActivity()).getLoginUser().equalsIgnoreCase("")){
			pseudoEdmPreferences = ((EdmFragmentActivity) getActivity()).getLoginUser().toString();
		}else{
			pseudoEdmPreferences = PreferenceHelper.getUserInPreferences().getPseudo();;
		}

		
	
		if(pseudoEdmPreferences != null){
			
			EdmApplication.showWaitingDialog(getActivity());
			
			 /*spice request for all edm in accueil activity*/
			//recuperer les edms user avec robospice (donc creer une requetre UserEdmsRequest)
			//PreferenceHelper.setListUserEdm(((EdmFragmentActivity)getActivity()).getSpiceManager().getDataFromCache(ListEdmsUser.class, "userEdmsRequest."+ApplicationConstants.GET_USER_EDMs).get().getListEdmsUser());
			userEdmRequest = new UserEdmsRequest(ApplicationConstants.GET_USER_EDMs, pseudoEdmPreferences);
	  		
	  		  ((EdmFragmentActivity) getActivity()).getSpiceManager()
	  			.execute(userEdmRequest, userEdmRequest.getCacheKey(), 
	  					DurationInMillis.NEVER, new UserEdmsRequestListener());
	  		  
	  		  EdmApplication.unShowWaitingDialog();
			
		}else{
			displayDialogMessageRetourAccueil(R.string.title_alert_dialog_retour_accueil, R.string.message_pas_connecte_voir_edms, R.string.button_valid_retour_accueil);	
		}

		return v;
	}
	
	
	void bindEdmDatas(ArrayList<EdmUser> listEdm){
		adapter = new PostEdmAdapter(getApplicationContext(),R.layout.mes_edms_textview_layout);
		for(EdmUser edm : listEdm){
		
		PostEdm postEdm;
		postEdm = new PostEdm();
		postEdm.setPost(edm.getContenu());
		postEdm.setDatePost(edm.getDatePost());
		postEdm.setHeurePost(edm.getHeurePost());
		postEdm.setAuteurPost(edm.getPseudo());
		
	
		adapter.add(postEdm);
		}

		listViewUserEdm.setAdapter(adapter);
	} 
	
	
	public void displayDialogMessageRetourAccueil(int title, int message, int buttonResource) {

		final AlertDialog alertDialog = new AlertDialog.Builder(getActivity())
				.setTitle(title)
				.setMessage(message)
				.setPositiveButton(buttonResource,
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface dialog,
									int which) {

								if (which == DialogInterface.BUTTON_POSITIVE) {
									dialog.cancel();
									getActivity().finish();
									intent = new Intent(getActivity(), AccueilActivity.class);
									startActivity(intent);
								}
							}
						}).create();
		alertDialog.show();

	}
	
	
	 public final class  UserEdmsRequestListener implements RequestListener<ListEdmsUser> {
			

			@Override
			public void onRequestFailure(SpiceException spiceException) {	
				if (spiceException instanceof NoNetworkException) {
					Log.d("dede", "failure request for EdmsUserRequestListener " + spiceException.getCause());
				}
				else if (spiceException.getCause() instanceof HttpMessageNotReadableException){
					Log.d("dede", "failure request for EdmsUserRequestListener " + spiceException.getCause());
				}
			}

			@Override
			public void onRequestSuccess(ListEdmsUser result) {
				// TODO Auto-generated method stub
			        PreferenceHelper.setListUserEdm(result.getListEdmsUser());
				    int nbEdmUser = result.getListEdmsUser().size();
				    
				    Toast.makeText(getActivity(), "Mise ˆ jour de vos " + nbEdmUser + " EDMs ", Toast.LENGTH_LONG).show();

				    
				    adapter = new PostEdmAdapter(getActivity(), R.layout.mes_edms_textview_layout);
					listViewUserEdm.setAdapter(adapter);
					bindEdmDatas(PreferenceHelper.getListUserEdm());
					listViewUserEdm.setScrollContainer(true);
					ToolBox.setListViewScrollable(listViewUserEdm);
					EdmApplication.unShowWaitingDialog();
				    
				    
			}
	    }
	
	

}
